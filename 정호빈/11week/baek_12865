import java.io.*;
import java.util.*;

public class Main {
	
	static int N,K;
	static int[][] arr;
	static int[][] d;
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st;
		st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		K = Integer.parseInt(st.nextToken());
		arr = new int[N][2];
		for(int i=0;i<N;i++) {
			st = new StringTokenizer(br.readLine());
			arr[i][0] = Integer.parseInt(st.nextToken());
			arr[i][1] = Integer.parseInt(st.nextToken());
		}
		d = new int[N][K+1];
		for(int i=0;i<N;i++)
			Arrays.fill(d[i], -1);
		
		System.out.println(recur(0,0));
		
		
	}
	private static int recur(int cur, int w) {
		if(w>K) {
			return -10000000;
		}
		if(cur==N) {
			return 0;
		}
		if(d[cur][w]!=-1) {
			return d[cur][w];
		}
		
		
		d[cur][w]=Math.max(recur(cur+1,w+arr[cur][0])+arr[cur][1],recur(cur+1,w));
		return d[cur][w];
	}
	

	
	
	
	

}
