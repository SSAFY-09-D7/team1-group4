import java.util.*;
import java.io.*;


public class Main {
	
	static int N,M;
	static int[] p;
	static List<int[]> g = new LinkedList<>();
	
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st;
		N = Integer.parseInt(br.readLine());
		M = Integer.parseInt(br.readLine());
		p = new int[N+1];
		for(int i=1;i<N+1;i++) {
			p[i] = i;
		}
		for(int i=0;i<M;i++) {
			st = new StringTokenizer(br.readLine());
			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
			int c = Integer.parseInt(st.nextToken());
			g.add(new int[] {a,b,c});
		}
		Collections.sort(g, new Comparator<int[]>() {
			@Override
			public int compare(int[] o1, int[] o2) {
				// TODO Auto-generated method stub
				return o1[2]-o2[2];
			}
		});
		int sum=0;
		for(int[] i:g) {
			if(find(i[0])!=find(i[1])) {
				union(i[0],i[1]);
				sum+=i[2];
			}
		}
		
		System.out.println(sum);
		
	}

	private static void union(int i, int j) {
		int pi = find(i);
		int pj = find(j);
		if(pi!=pj) {
			p[pi] = pj;
		}
	}

	private static int find(int i) {
		// TODO Auto-generated method stub
		if(p[i]==i)return i;
		return p[i]=find(p[i]);
	}


	
}
